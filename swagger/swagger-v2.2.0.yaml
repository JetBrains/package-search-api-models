openapi: 3.0.0
info:
  title: JetBrains Package Search API v2
  version: 2.2.0
  description: >-
    JetBrains Package Search API v2.<br />
    All responses are in UTF-8.<br />
    Note that V1 content types, and legacy /idea/* endpoints, **are deprecated** and will be eventually shut down. Please migrate to the equivalent
    V2 content types and endpoints as soon as possible.
  termsOfService: 'https://plugins.jetbrains.com/legal/terms-of-use'
  contact:
    email: support@jetbrains.com
tags:
  - name: package
    description: Package resource.
  - name: repository
    description: Repository resource.
  - name: idea
    description: IntelliJ IDEA-specific resource.
paths:
  '/repositories':
    get:
      tags:
        - repository
      summary: List indexed public repositories.
      description: >-
        Returns a list of the public repositories indexed by default by Package Search.<br />
        This endpoint *requires* a valid V2 content type in the request Accept header, or a `*/*` wildcard, or that the Accept header is
        missing.<br />
        The responses are identical for all acceptable content types, and wildcards.
      operationId: getPublicRepositoriesList
      responses:
        '200':
          description: Successful operation.
          content:
            application/vnd.jetbrains.packagesearch.minimal.v2+json:
              schema:
                $ref: '#/components/schemas/RepositoriesList'
            application/vnd.jetbrains.packagesearch.standard.v2+json:
              schema:
                $ref: '#/components/schemas/RepositoriesList'
            '*/*':
              schema:
                $ref: '#/components/schemas/RepositoriesList'
        '406':
          description: No acceptable content types provided in the request Accept header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/package/{id}':
    get:
      tags:
        - package
      summary: Find package by Maven coordinates.
      description: >-
        Returns a single package with the given `groupId:artifactId` coordinates, if any.<br />
        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that
        the Accept header is missing.<br />
        For `*/*` the response is in the standard V2 format, for `application/json` or missing Accept header it's in the minimal V1 format.
      operationId: getPackageById
      parameters:
        - name: id
          in: path
          description: >-
            GroupId and ArtifactId of the package. E.g., `org.jetbrains:package-search`.
          required: true
          schema:
            type: string
            pattern: '^([\w.\-]+):([\w.\-]+)$'
      responses:
        '200':
          description: Successful operation.
          content:
            application/vnd.jetbrains.packagesearch.minimal.v2+json:
              schema:
                $ref: '#/components/schemas/MinimalV2PackageWithRepos'
            application/vnd.jetbrains.packagesearch.standard.v2+json:
              schema:
                $ref: '#/components/schemas/StandardV2PackageWithRepos'
            application/json+com.jetbrains.packagesearch.minimal:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            application/json+com.jetbrains.packagesearch.standard:
              schema:
                $ref: '#/components/schemas/StandardV1Package'
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            '*/*':
              schema:
                $ref: '#/components/schemas/StandardV2PackageWithRepos'
        '400':
          description: Missing or invalid ID, should be in `groupId:artifactId` format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No package found with the given coordinates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: No acceptable content types provided in the request Accept header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/package/{id}/readme':
    get:
      tags:
        - package
      summary: Get readme by Maven coordinates.
      description: >-
        Returns a valid HTML readme with the given `groupId:artifactId` coordinates, if any.<br />
        This endpoint *requires* a valid `text/html` content type in the request Accept header.
      operationId: getPackageReadmeById
      parameters:
        - name: id
          in: path
          description: >-
            GroupId and ArtifactId of the package. E.g., `org.jetbrains:package-search`.
          required: true
          schema:
            type: string
            pattern: '^([\w.\-]+):([\w.\-]+)$'
      responses:
        '200':
          description: Successful operation.
          headers:
            X-Request-Id:
              description: RequestId used for metrics & diagnostics
              schema:
                type: string
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/PackageReadme'
        '400':
          description: Missing or invalid ID, should be in `groupId:artifactId` format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No package found with the given coordinates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: No acceptable content types provided in the request Accept header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/package#range':
    get:
      tags:
        - package
      summary: Find a range of packages by their Maven coordinates.
      description: >-
        Returns a collection of packages that match the provided Maven coordinates (a comma-separated list of `groupId:artifactId`).<br />
        The result will contain _at most_ the same number of items as the number of IDs provided in the request, but may contain less, if any of
        the IDs have no matches.<br />
        Note that if none of the provided IDs match you will get an HTTP 200 response with an empty array of packages.<br />
        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that
        the Accept header is missing.<br />
        For `*/*` the response is in the standard V2 format, for `application/json` or missing Accept header it's in the minimal V1 format.
      operationId: getPackagesByRange
      parameters:
        - name: range
          in: query
          description: >-
            Range of package coordinates; max. 25 items in a `groupId:artifactId` format, comma-separated.<br />
            E.g., `com.jetbrains:my-package,com.jetbrains:another-package`.
          required: true
          schema:
            type: array
            items:
              type: string
              pattern: '^([\w.\-]+):([\w.\-]+)$'
      responses:
        '200':
          description: Successful operation.
          content:
            application/vnd.jetbrains.packagesearch.minimal.v2+json:
              schema:
                $ref: '#/components/schemas/MinimalV2PackagesWithRepos'
            application/vnd.jetbrains.packagesearch.standard.v2+json:
              schema:
                $ref: '#/components/schemas/StandardV2PackagesWithRepos'
            application/json+com.jetbrains.packagesearch.minimal:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            application/json+com.jetbrains.packagesearch.standard:
              schema:
                $ref: '#/components/schemas/StandardV1Package'
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            '*/*':
              schema:
                $ref: '#/components/schemas/StandardV2PackageWithRepos'
        '400':
          description: Either no non-blank IDs were passed, or more than 25 IDs non-blank IDs were passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: No acceptable content types provided in the request Accept header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/package#search':
    get:
      tags:
        - package
      summary: Search for packages by query (fulltext search).
      description: >-
        Returns a collection of packages matching the provided query in any of their fields.<br />
        If the query only contains Maven coordinates (`groupId:artifactId`), the results will prioritise exact matches of the coordinates.<br />
        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that
        the Accept header is missing.<br />
        For `*/*` the response is in the standard V2 format, for `application/json` Accept header it's in the minimal V1 format. If the accept
        header is missing or empty, the legacy format will be used (a wrapped minimal v1 format, expected by IJ's built-in editor suggestions
        for dependencies in build scripts)
      operationId: searchPackages
      parameters:
        - name: query
          in: query
          description: Search query, Must not be absent or blank.
          required: true
          schema:
            type: string
        - name: onlyStable
          in: query
          description: When true, only packages containing stable versions will be returned. Default value `false`.
          required: false
          schema:
            type: boolean
        - name: includeMPPChild
          in: query
          description: When true, mpp child artifacts (platfrom specific) will be included in search results. Default value `false`.
          required: false
          schema:
            type: boolean
        - name: onlyMpp
          in: query
          description: When true, only multi-platform packages will be included in search results. Default value `false`.
          required: false
          schema:
            type: boolean
        - name: mustSupport
          in: query
          description: Comma-separated list of the supported platforms/targets.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/vnd.jetbrains.packagesearch.minimal.v2+json:
              schema:
                $ref: '#/components/schemas/MinimalV2PackagesWithRepos'
            application/vnd.jetbrains.packagesearch.standard.v2+json:
              schema:
                $ref: '#/components/schemas/StandardV2PackagesWithRepos'
            application/json+com.jetbrains.packagesearch.minimal:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            application/json+com.jetbrains.packagesearch.standard:
              schema:
                $ref: '#/components/schemas/StandardV1Package'
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            '':
              schema:
                $ref: '#/components/schemas/LegacyV1Packages'
            application/vnd.jetbrains.packagesearch.legacy+json:
              schema:
                $ref: '#/components/schemas/LegacyV1Packages'
            '*/*':
              schema:
                $ref: '#/components/schemas/StandardV2PackageWithRepos'
        '400':
          description: The query parameter must not be blank.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: No acceptable content types provided in the request Accept header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/package#hash':
    get:
      tags:
        - package
      summary: Find a package by hash.
      description: >-
        Returns a matching package, by looking for the provided hash in all packages' versions.<br />
        <br />
        **⚠️ Don't specify both `md5` and `sha1` at the same time, the behaviour is not defined and can result in an error or unexpected
        behaviour.**<br />
        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that
        the Accept header is missing.<br />
        For `*/*` the response is in the standard V2 format, for `application/json` or missing Accept header it's in the minimal V1 format.
      operationId: getPackagesByHash
      parameters:
        - name: sha1
          in: query
          description: SHA-1 hash of the package to find.
          required: false
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{40}$"
        - name: md5
          in: query
          description: MD5 hash of the package to find.
          required: false
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{32}$"
      responses:
        '200':
          description: Successful operation.
          content:
            application/vnd.jetbrains.packagesearch.minimal.v2+json:
              schema:
                $ref: '#/components/schemas/MinimalV2PackageWithRepos'
            application/vnd.jetbrains.packagesearch.standard.v2+json:
              schema:
                $ref: '#/components/schemas/StandardV2PackageWithRepos'
            application/json+com.jetbrains.packagesearch.minimal:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            application/json+com.jetbrains.packagesearch.standard:
              schema:
                $ref: '#/components/schemas/StandardV1Package'
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            '*/*':
              schema:
                $ref: '#/components/schemas/StandardV2PackageWithRepos'
        '400':
          description: The provided hash is empty or doesn't look like it's a valid hash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No package found with the given hash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: No acceptable content types provided in the request Accept header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/package#suggest':
    get:
      tags:
        - package
      summary: Get suggested packages.
      description: >-
        Returns a collection of suggested packages. At least one of `groupId` and `artifactId` is required to be non-blank.<br />
        This endpoint *requires* a valid minimal V1 or either V2 content type in the request Accept header, or `application/json`, or a `*/*`
        wildcard, or that the Accept header is missing. The standard V1 format is **NOT** supported for this endpoint.<br />
        For `*/*` the response is in the standard V2 format, for `application/json`Accept header it's in the minimal V1 format. If the accept
        header is missing or empty, the legacy format will be used (a wrapped minimal v1 format, expected by IJ's built-in editor suggestions
        for dependencies in build scripts)
      operationId: suggestPackages
      parameters:
        - name: artifactId
          in: query
          description: ArtifactId to use for suggestions.
          required: false
          schema:
            type: string
        - name: groupId
          in: query
          description: GroupId to use for suggestions.
          required: false
          schema:
            type: string
        - name: onlyMpp
          in: query
          description: When true, only multi-platform packages will be included in search results. Default value `false`.
          required: false
          schema:
            type: boolean
        - name: mustSupport
          in: query
          description: Comma-separated list of the supported platforms/targets.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/vnd.jetbrains.packagesearch.minimal.v2+json:
              schema:
                $ref: '#/components/schemas/MinimalV2PackagesWithRepos'
            application/vnd.jetbrains.packagesearch.standard.v2+json:
              schema:
                $ref: '#/components/schemas/StandardV2PackagesWithRepos'
            application/json+com.jetbrains.packagesearch.minimal:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            application/json+com.jetbrains.packagesearch.standard:
              schema:
                $ref: '#/components/schemas/StandardV1Package'
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalV1Package'
            '':
              schema:
                $ref: '#/components/schemas/LegacyV1Packages'
            application/vnd.jetbrains.packagesearch.legacy+json:
              schema:
                $ref: '#/components/schemas/LegacyV1Packages'
            '*/*':
              schema:
                $ref: '#/components/schemas/StandardV2PackageWithRepos'
        '400':
          description: At least one of `groupId` and `artifactId` is required to be non-blank.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: No acceptable content types provided in the request Accept header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/search/idea/fulltext':
    get:
      tags:
        - idea
      summary: (DEPRECATED) Full text search (for IDEA).
      deprecated: true
      description: >-
        **DEPRECATED.** Please use `/package#search` (with minimal V1 response type) instead for a drop-in replacement. This endpoint is slated for
        deletion in v3.0.<br />
        <br />
        Returns a collection of packages matching the query.
      operationId: ideaSearch
      parameters:
        - name: query
          in: query
          description: Query to search for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MinimalV2Package'
        '400':
          description: The query parameter Must not be absent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/search/idea/suggest':
    get:
      tags:
        - idea
      summary: (DEPRECATED) Full text search (for IDEA).
      deprecated: true
      description: >-
        **DEPRECATED.** Please use `/package#suggest` (with minimal V1 response type) instead for a drop-in replacement. This endpoint is slated for
        deletion in v3.0.<br />
        <br />
        Returns a collection of packages suggestions; either `artifactId` or `groupId` are required (they can be both blank).
      operationId: ideaSuggest
      parameters:
        - name: groupId
          in: query
          description: GroupId to use for suggestions.
          required: false
          schema:
            type: string
        - name: artifactId
          in: query
          description: ArtifactId to use for suggestions.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MinimalV2Package'
        '400':
          description: 'At least one of groupId and artifactId is required.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
servers:
  - url: 'https://package-search.services.jetbrains.com/api'
components:
  schemas:
    StandardV2PackagesWithRepos:
      type: object
      description: A list of packages and a list of info about the repositories they are available in.
      properties:
        packages:
          type: array
          description: List of all the matching packages. Must not be absent.
          items:
            $ref: '#/components/schemas/StandardV2Package'
        repositories:
          type: array
          description: >-
            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).
            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:
             * Maven Central (`maven_central`). Must not be absent.
          items:
            $ref: '#/components/schemas/V2Repository'
      required:
        - packages
        - repositories
    StandardV2PackageWithRepos:
      type: object
      description: A package and the list of info about the repositories it is available in.
      properties:
        package:
          $ref: '#/components/schemas/StandardV2Package'
        repositories:
          type: array
          description: >-
            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).
            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:
             * Maven Central (`maven_central`). Must not be absent.
          items:
            $ref: '#/components/schemas/V2Repository'
      required:
        - package
        - repositories
    V2Repository:
      type: object
      description: Info about a repository where any number of packages may be available.
      properties:
        id:
          type: string
          description: >-
            The ID of the repository, either a known ID or a custom one. The only currently supported known value is `maven_central`.
        url:
          type: string
          format: uri
          description: >-
            The URL of the repository, if it is not a known one. This must be a valid URL. If this field is missing, the `id` field must
            be a valid known repository ID; this field is expected to be absent in that case.
        type:
          description: The type of repository. The only currently supported value is `maven`. If this field is missing, its default value is `maven`.
        alternate_urls:
          type: array
          items:
            type: string
          description: >-
            Possible alternate urls for the repository.
        friendly_name:
          type: string
          description: >-
            The friendly name of this repository, that might be used when showing to user.
      required:
        - id
    StandardV2Package:
      type: object
      description: A package, as identified by its unique coordinates (e.g., groupId and artifactId for Maven repositories).
      properties:
        group_id:
          type: string
          description: The groupId. Must not be absent.
        artifact_id:
          type: string
          description: The artifactId. Must not be absent.
        name:
          type: string
          description: The human-readable name for the package.
        description:
          type: string
          description: A description for the package.
        url:
          type: string
          format: uri
          description: A URL at which the user can find more information about the package.
        licenses:
          $ref: '#/components/schemas/StandardV2Licenses'
        scm:
          $ref: '#/components/schemas/StandardV2Scm'
        mpp:
          $ref: '#/components/schemas/StandardV2Mpp'
        platforms:
          type: array
          description: The list of supported platforms. Must not be absent.
          items:
            $ref: '#/components/schemas/StandardV2Platform'
        authors:
          type: array
          description: The list of library authors.
          items:
            $ref: '#/components/schemas/StandardV2Author'
        latest_version:
          $ref: '#/components/schemas/StandardV2Version'
        versions:
          type: array
          description: The list of library versions. Must not be absent.
          items:
            $ref: '#/components/schemas/StandardV2Version'
        dependency_rating:
          type: number
          description: The ranking value for the package. Must not be absent.
          format: float
          default: 0
        github:
          $ref: '#/components/schemas/StandardV2GitHub'
        stackoverflow:
          $ref: '#/components/schemas/StandardV2StackOverflowTags'
      required:
        - group_id
        - artifact_id
        - versions
        - name
        - latest_version
        - dependency_rating
    StandardV2Mpp:
      type: object
      description: If the package is coming from a Kotlin/Multiplatform project, this contains information about the module type.
      properties:
        module_type:
          description: >-
            The type of Kotlin/Multiplatform module that generated this package. Supported values are: `root`, and `child`.
          type: string
    StandardV2Platform:
      type: object
      description: A platform supported by the package.
      properties:
        type:
          type: string
          description: >-
            A target platform ID. Supported types are: `jvm`, `js`, `native`, and `android`. Must not be absent
        targets:
          type: array
          description: A set of supported targets for this platform type.
          items:
            description: >-
              The name of a target, which is generally a sub-specialization of the platform type. The supported targets depend on
              the platform type, and on the tooling — e.g., what is supported by the version of Kotlin/Multiplatform that was used to generate
              the artifact.

              When the type is `native`, it will generally be a target platform and ABI. For example, `ios_arm64` and `cygwin_x86`.
              When the type is `js`, it can be something like `node` or `browser`.
              When the type is `jvm`, it can be something like `jvm8`.

              Please refer to Kotlin Multiplatform documentation for further details.
            type: string
      required:
        - type
    StandardV2Scm:
      type: object
      description: Info about source control for the package, if available.
      properties:
        url:
          type: string
          format: uri
          description: A URL to the source code repository (e.g., the GitHub project page, or a Git repository).
      required:
        - url
    StandardV2Licenses:
      type: object
      description: >-
        Licensing information for the package. If the package sources are hosted on GitHub, the main license matches the one GitHub classifies the
        repository as having. If not, and there are multiple licenses, the main license is picked with no particular criteria from the set of licenses
        and the others are available in `other_licenses`.
      properties:
        main_license:
          $ref: '#/components/schemas/StandardV2LinkedFile'
        other_licenses:
          type: array
          description: If the package has multiple licences, these will be the "secondary" ones, in no particular order.
          items:
            $ref: '#/components/schemas/StandardV2LinkedFile'
      required:
        - main_license
    StandardV2Author:
      type: object
      description: A package author.
      properties:
        name:
          type: string
          description: The name of the author.
        org:
          type: string
          description: The name of the organisation that the author works for.
        org_url:
          type: string
          format: uri
          description: The URL of the website of the organisation that the author works for.
    StandardV2Version:
      type: object
      description: A package version.
      properties:
        version:
          type: string
          description: The (human-readable) name of the package version. Must not be absent.
        last_changed:
          type: number
          format: int64
          default: 0
          description: >-
            The epoch-based release (or update) timestamp for this version. In case of disagreements across repositories, this will
            be set to the latest value in the set. Must not be absent.
        stable:
          type: boolean
          description: >-
            A hint as to whether this version should be considered stable. Note that this is based on heuristics and may not be accurate
            in 100% of the cases. Also note the value for a version may change in the future as these heuristics can be changed without notice.
            Must not be absent.
        repository_ids:
          type: array
          description: >-
            The IDs of the repositories that this version is available in. These must match a Repository entry in the `repositories` set
            at the root level of the response, or be a known repository ID. Must not be absent.
          items:
            type: string
            description: Repository IDs, must match one of the items in the `repositories` field in the same response, or be a known repository ID.
        artifacts:
          type: array
          description: The set of artifacts available for this version. Must not be absent.
          items:
            $ref: '#/components/schemas/StandardV2Artifact'
      required:
        - version
        - last_changed
        - stable
        - repository_ids
        - artifacts
    StandardV2Artifact:
      type: object
      description: An artifact.
      properties:
        sha256:
          type: string
          description: The SHA-256 for this artifact.
        sha1:
          type: string
          description: The SHA-1 for this artifact.
        md5:
          type: string
          description: The MD5 for this artifact.
        packaging:
          type: string
          description: The packaging of this artifact. When missing, in a Maven repository, can be assumed to be `jar`.
        classifier:
          type: string
          description: The classifier of this artifact. When missing, this artifact is considered the "main" one for the version.
    StandardV2GitHub:
      type: object
      description: Information about this package derived from its GitHub repository.
      properties:
        description:
          type: string
          description: A description for the package's source repository. May differ from the package's description.
        is_fork:
          type: boolean
          description: Whether the package's source repository is a fork of another repository. When missing this can be assumed to be `false`.
        stars:
          type: number
          format: int32
          default: 0
          description: The number of stars the package's source repository has on GitHub. When missing this can be assumed to be zero.
        watchers:
          type: number
          format: int32
          default: 0
          description: >-
            The number of watchers (people following it) the package's source repository has on GitHub. When missing this can be assumed to be zero.
        forks:
          type: number
          format: int32
          default: 0
          description: The number of times the package's source repository has been forked on GitHub. When missing this can be assumed to be zero.
        subscribers:
          type: number
          format: int32
          default: 0
          description: The number of subscribers to changes to the package's source repository on GitHub. When missing this can be assumed to be zero.
        network:
          type: number
          format: int32
          default: 0'
          description: The size of the network around the package's source repository on GitHub. When missing this can be assumed to be zero.
        community_profile:
          $ref: '#/components/schemas/StandardV2GitHubCommunityProfile'
        last_checked:
          type: number
          format: int64
          default: 0
          description: The epoch-based timestamp when this information was last changed. Must not be absent.
      required:
        - last_checked
    StandardV2GitHubCommunityProfile:
      type: object
      description: Info from the package's repository GitHub community profile.
      properties:
        files:
          $ref: '#/components/schemas/StandardV2GitHubCommunityProfileFiles'
        documentation:
          type: string
          format: uri
          description: The URL for human-browsable documentation for this package.
        description:
          type: string
          description: The repository description, if any.
        health_percentage:
          type: number
          format: int32
          description: A number between 0 and 100 indicating the "health" rating assigned by GitHub to the package's repository. Must not be absent.
      required:
        - health_percentage
        - files
    StandardV2GitHubCommunityProfileFiles:
      type: object
      description: A set of known files available in the package's repository.
      properties:
        license:
          $ref: '#/components/schemas/StandardV2LinkedFile'
        readme:
          $ref: '#/components/schemas/StandardV2LinkedFile'
        code_of_conduct:
          $ref: '#/components/schemas/StandardV2LinkedFile'
    StandardV2LinkedFile:
      type: object
      description: A file as referenced elsewhere, accessible online.
      properties:
        name:
          description: Human-readable name for the file.
          type: string
        url:
          description: Raw file URL. Must not be absent.
          type: string
          format: uri
        html_url:
          description: If it exists, the URL for an HTML rendition of the file contents (may be the same as `url`).
          type: string
          format: uri
        spdx_id:
          description: If the file represents a known license, this will be the corresponding SPDX ID.
          type: string
        key:
          description: If the file represents a license or a Code Of Conduct, this will be the file's key.
          type: string
      required:
        - url
    StandardV2StackOverflowTags:
      type: object
      description: A list of StackOverflow tags associated with the package.
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/StandardV2StackOverflowTag'
      required:
        - tags
    StandardV2StackOverflowTag:
      type: object
      description: A StackOverflow tag.
      properties:
        tag:
          type: string
          description: The tag name itself. This is the tag's unique ID.
        count:
          type: number
          format: int32
          description: The number of questions on StackOverflow for the tag.
      required:
        - tag
        - count
    MinimalV2PackagesWithRepos:
      type: object
      description: A list of packages and a list of info about the repositories they are available in.
      properties:
        packages:
          type: array
          description: List of all the matching packages. Must not be absent.
          items:
            $ref: '#/components/schemas/MinimalV2Package'
        repositories:
          type: array
          description: >-
            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).
            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:
             * Maven Central (`maven_central`). Must not be absent.
          items:
            $ref: '#/components/schemas/V2Repository'
      required:
        - packages
        - repositories
    MinimalV2PackageWithRepos:
      type: object
      description: A package and the list of info about the repositories it is available in.
      properties:
        package:
          $ref: '#/components/schemas/MinimalV2Package'
        repositories:
          type: array
          description: >-
            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).
            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:
             * Maven Central (`maven_central`). Must not be absent.
          items:
            $ref: '#/components/schemas/V2Repository'
      required:
        - package
        - repositories
    MinimalV2Package:
      type: object
      description: A package, as identified by its unique coordinates (e.g., groupId and artifactId for Maven repositories).
      properties:
        groupId:
          type: string
          description: The groupId. Must not be absent.
        artifactId:
          type: string
          description: The artifactId. Must not be absent.
        versions:
          type: array
          description: The list of library versions. Must not be absent.
          items:
            $ref: '#/components/schemas/MinimalV2Version'
      required:
        - groupId
        - artifactId
        - versions
    MinimalV2Version:
      type: object
      description: A package version.
      properties:
        version:
          type: string
          description: The (human-readable) name of the package version. Must not be absent.
        repositoryIds:
          type: array
          description: >-
            The IDs of the repositories that this version is available in. These must match a Repository entry in the `repositories` set
            at the root level of the response, or be a known repository ID. Must not be absent.
          items:
            type: string
            description: Repository IDs, must match one of the items in the `repositories` field in the same response, or be a known repository ID.
      required:
        - version
        - repositoryIds
    StandardV1Package:
      type: object
      deprecated: true
      properties:
        groupId:
          type: string
        artifactId:
          type: string
        packaging:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
          format: uri
        scm:
          $ref: '#/components/schemas/StandardV1Scm'
        mpp:
          $ref: '#/components/schemas/StandardV1MPPData'
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/StandardV1Platform'
        authors:
          type: array
          items:
            $ref: '#/components/schemas/StandardV1Author'
        latestVersion:
          $ref: '#/components/schemas/StandardV1Version'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/StandardV1Version'
        dependencyRating:
          type: number
          format: float
          default: 0
        github:
          $ref: '#/components/schemas/StandardV1GitHub'
        stackoverflow:
          $ref: '#/components/schemas/StandardV1StackOverflowTags'
      required:
        - groupId
        - artifactId
        - versions
        - name
        - latestVersion
        - dependencyRating
    StandardV1MPPData:
      type: object
      deprecated: true
      properties:
        module_type:
          type: string
    StandardV1Platform:
      type: object
      deprecated: true
      properties:
        type:
          type: string
        targets:
          type: array
          items:
            type: string
    StandardV1Scm:
      type: object
      deprecated: true
      properties:
        url:
          type: string
          format: uri
        connection:
          type: string
        developerConnection:
          type: string
    StandardV1Author:
      type: object
      deprecated: true
      properties:
        name:
          type: string
        org:
          type: string
        orgUrl:
          type: string
          format: uri
    StandardV1Version:
      type: object
      deprecated: true
      properties:
        version:
          type: string
        sha1:
          type: string
        md5:
          type: string
        stable:
          type: boolean
        packaging:
          type: string
        updated:
          type: number
          format: int64
          default: 0
      required:
        - version
    StandardV1GitHub:
      type: object
      deprecated: true
      properties:
        description:
          type: string
        url:
          type: string
        isFork:
          type: boolean
        stars:
          type: number
          format: int64
          default: 0
        watches:
          type: number
          format: int64
          default: 0
        forks:
          type: number
          format: int64
          default: 0
        subscribers:
          type: number
          format: int64
          default: 0
        network:
          type: number
          format: int64
          default: 0'
        community_profile:
          $ref: '#/components/schemas/StandardV1GitHubCommunityProfile'
        updated:
          type: number
          format: int64
          default: 0
      required:
        - url
    StandardV1GitHubCommunityProfile:
      type: object
      deprecated: true
      properties:
        description:
          type: string
        files:
          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFiles'
        documentation:
          type: string
          format: uri
        health_percentage:
          type: number
          format: int32
    StandardV1GitHubCommunityProfileFiles:
      type: object
      deprecated: true
      properties:
        license:
          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFile'
        readme:
          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFile'
        code_of_conduct:
          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFile'
    StandardV1GitHubCommunityProfileFile:
      type: object
      deprecated: true
      properties:
        name:
          type: string
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        spdx_id:
          type: string
    StandardV1StackOverflowTags:
      type: object
      deprecated: true
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/StandardV1StackOverflowTag'
    StandardV1StackOverflowTag:
      type: object
      deprecated: true
      properties:
        tag:
          type: string
        count:
          type: number
          format: int32
      required:
        - tag
        - count
    MinimalV1Package:
      type: object
      deprecated: true
      properties:
        groupId:
          type: string
        artifactId:
          type: string
        versions:
          type: array
          items:
            $ref: '#/components/schemas/MinimalV1Version'
      required:
        - groupId
        - artifactId
        - versions
    MinimalV1Version:
      type: object
      deprecated: true
      properties:
        version:
          type: string
      required:
        - version
    LegacyV1Packages:
      type: object
      deprecated: true
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MinimalV1Package'
      required:
        - items
    RepositoriesList:
      type: object
      description: A list of all the currently indexed repositories (aka "known repositories").
      properties:
        repositories:
          type: array
          description: The list of all known repositories that are currently indexed.
          items:
            $ref: '#/components/schemas/V2Repository'
      required:
        - repositories
    PackageReadme:
      type: string
      description: HTML response example for package readme
      example: '<div id="readme" class="md" data-path="README.md">...</div>'
    ErrorResponse:
      type: object
      description: Information about an error occurred while processing a request.
      properties:
        error:
          type: object
          description: The error properties.
          properties:
            message:
              type: string
              description: The error message.
          required:
            - message
      required:
        - error
