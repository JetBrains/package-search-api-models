package org.jetbrains.packagesearch.security

import io.ktor.client.HttpClient
import io.ktor.client.call.body
import io.ktor.client.plugins.contentnegotiation.ContentNegotiation
import io.ktor.client.request.get
import io.ktor.serialization.kotlinx.json.json
import io.ktor.utils.io.core.Closeable
import kotlinx.serialization.Serializable

@Serializable
data class SonatypeVulnerabilityResponse(
    val coordinates: String,
    val description: String,
    val reference: String,
    val vulnerabilities: List<Vulnerability>,
    val sonatypeOssiScore: Double
)

@Serializable
data class Vulnerability(
    val id: String,
    val displayName: String,
    val title: String,
    val description: String,
    val cvssScore: Double,
    val cvssVector: String,
    val cwe: String,
    val cve: String,
    val reference: String,
    val externalReferences: List<String>
)

class SonatypeSecurityApiClient(
    private val httpClient: HttpClient = defaultClient()
) : Closeable by httpClient {

    companion object {
        fun defaultClient() = HttpClient {
            install(ContentNegotiation) {
                json()
            }
        }
    }

    suspend fun getVulnerabilities(coordinates: String) = 
        httpClient.get("https://ossindex.sonatype.org/api/v3/component-report/$coordinates")
            .body<SonatypeVulnerabilityResponse>()
}

suspend fun SonatypeSecurityApiClient.getMavenPackageVulnerabilities(
    groupId: String,
    artifactId: String,
    version: String
) = getVulnerabilities("pkg:maven/$groupId/$artifactId@$version")

suspend fun SonatypeSecurityApiClient.getNpmPackageVulnerabilities(
    name: String,
    version: String
) = getVulnerabilities("pkg:npm/$name@$version")

suspend fun SonatypeSecurityApiClient.getCocoapodsPackageVulnerabilities(
    name: String,
    version: String
) = getVulnerabilities("pkg:cocoapods/$name@$version")